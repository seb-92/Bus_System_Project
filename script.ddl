-- Generated by Oracle SQL Developer Data Modeler 21.4.2.059.0838
--   at:        2022-12-16 22:48:53 CET
--   site:      Oracle Database 12cR2
--   type:      Oracle Database 12cR2



CREATE TABLESPACE students2022 
--  WARNING: Tablespace has no data files defined 
 LOGGING ONLINE
    EXTENT MANAGEMENT LOCAL AUTOALLOCATE
FLASHBACK ON;

CREATE USER inf148161 IDENTIFIED BY ACCOUNT UNLOCK ;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE autobus (
    numer_rejestracyjny      VARCHAR2(10) NOT NULL,
    rok_produkcji            INTEGER NOT NULL,
    przebieg                 FLOAT(10),
    model_autobusu_producent VARCHAR2(60) NOT NULL,
    model_autobusu_model     VARCHAR2(60) NOT NULL,
    zajezdnia_adres          VARCHAR2(255) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE students2022 LOGGING
    STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
NO INMEMORY;

ALTER TABLE autobus ADD CONSTRAINT autobus_pk PRIMARY KEY ( numer_rejestracyjny );

CREATE TABLE bilet_krótkookresowy (
    rodzaj_ulgi         VARCHAR2(60) NOT NULL,
    okres_obowi¹zywania VARCHAR2(60) NOT NULL,
    cena                FLOAT(4) NOT NULL
)
LOGGING;

ALTER TABLE bilet_krótkookresowy ADD CONSTRAINT bilet_pk PRIMARY KEY ( rodzaj_ulgi,
                                                                       okres_obowi¹zywania );

CREATE TABLE biletomat (
    numer_identyfikuj¹cy        INTEGER NOT NULL,
    dostêpne_sposoby_p³atnoœci  VARCHAR2(60) NOT NULL,
    autobus_numer_rejestracyjny VARCHAR2(10),
    przystanek_id_przystanku    CHAR(10)
)
LOGGING;

ALTER TABLE biletomat
    ADD CONSTRAINT arc_2 CHECK ( ( ( autobus_numer_rejestracyjny IS NOT NULL )
                                   AND ( przystanek_id_przystanku IS NULL ) )
                                 OR ( ( przystanek_id_przystanku IS NOT NULL )
                                      AND ( autobus_numer_rejestracyjny IS NULL ) ) );

CREATE UNIQUE INDEX biletomat__idx ON
    biletomat (
        przystanek_id_przystanku
    ASC )
        LOGGING;

CREATE UNIQUE INDEX biletomat__idx1 ON
    biletomat (
        autobus_numer_rejestracyjny
    ASC )
        LOGGING;

ALTER TABLE biletomat ADD CONSTRAINT biletomat_pk PRIMARY KEY ( numer_identyfikuj¹cy );

CREATE TABLE kolejnosc_przystankow (
    numer_przystanku             INTEGER NOT NULL,
    linia_autobusowa_numer_linii VARCHAR2(5) NOT NULL,
    przystanek_id_przystanku     CHAR(10) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE students2022 LOGGING
    STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
NO INMEMORY;

ALTER TABLE kolejnosc_przystankow
    ADD CONSTRAINT kolejnoœæ_przystanków_pk PRIMARY KEY ( przystanek_id_przystanku,
                                                          linia_autobusowa_numer_linii,
                                                          numer_przystanku );

CREATE TABLE linia_autobusowa (
    numer_linii VARCHAR2(5) NOT NULL
)
LOGGING;

ALTER TABLE linia_autobusowa ADD CONSTRAINT linia_autobusowa_pk PRIMARY KEY ( numer_linii );

CREATE TABLE model_autobusu (
    model         VARCHAR2(60) NOT NULL,
    producent     VARCHAR2(60) NOT NULL,
    iloœæ_miejsc  INTEGER NOT NULL,
    rodzaj_paliwa VARCHAR2(60) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE students2022 LOGGING
    STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
NO INMEMORY;

ALTER TABLE model_autobusu ADD CONSTRAINT model_autobusu_pk PRIMARY KEY ( producent,
                                                                          model );

CREATE TABLE pracownik (
    pesel         CHAR(11) NOT NULL,
    imiê          VARCHAR2(60) NOT NULL,
    nazwisko      VARCHAR2(60) NOT NULL,
    zawód         VARCHAR2(60) NOT NULL,
    wynagrodzenie FLOAT(8),
    wiek          INTEGER
)
PCTFREE 10 PCTUSED 40 TABLESPACE students2022 LOGGING
    STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
NO INMEMORY;

ALTER TABLE pracownik ADD CONSTRAINT pracownik_pk PRIMARY KEY ( pesel );

CREATE TABLE przegl¹d_pojazdu (
    data_przegl¹du              TIMESTAMP NOT NULL,
    ocena_stanu_pojazdu         VARCHAR2(60) NOT NULL,
    data_nastêpnego_przegl¹du   DATE NOT NULL,
    pracownik_pesel             CHAR(11) NOT NULL,
    autobus_numer_rejestracyjny VARCHAR2(10) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE students2022 LOGGING
    STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
NO INMEMORY;

ALTER TABLE przegl¹d_pojazdu
    ADD CONSTRAINT przegl¹d_pojazdu_pk PRIMARY KEY ( pracownik_pesel,
                                                     autobus_numer_rejestracyjny,
                                                     data_przegl¹du );

CREATE TABLE przejazd (
    data_i_godzina_rozpoczêcia   TIMESTAMP NOT NULL,
    data_i_godzina_zakoñczenia   TIMESTAMP NOT NULL,
    pracownik_pesel              CHAR(11) NOT NULL,
    autobus_numer_rejestracyjny  VARCHAR2(10) NOT NULL,
    linia_autobusowa_numer_linii VARCHAR2(5) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE students2022 LOGGING
    STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
NO INMEMORY;

ALTER TABLE przejazd
    ADD CONSTRAINT przejazd_pk PRIMARY KEY ( autobus_numer_rejestracyjny,
                                             pracownik_pesel,
                                             linia_autobusowa_numer_linii,
                                             data_i_godzina_rozpoczêcia );

CREATE TABLE przystanek (
    id_przystanku CHAR(10) NOT NULL,
    nazwa         VARCHAR2(60) NOT NULL,
    adres         VARCHAR2(255) NOT NULL
)
LOGGING;

ALTER TABLE przystanek ADD CONSTRAINT przystanek_pk PRIMARY KEY ( id_przystanku );

CREATE TABLE "RELACJA BILET-BILETOMAT" (
    biletomat_numer_identyfikuj¹cy INTEGER NOT NULL,
    bilet_rodzaj_ulgi              VARCHAR2(60) NOT NULL,
    bilet_okres_obowi¹zywania      VARCHAR2(60) NOT NULL
)
LOGGING;

ALTER TABLE "RELACJA BILET-BILETOMAT"
    ADD CONSTRAINT bilet_biletomat PRIMARY KEY ( biletomat_numer_identyfikuj¹cy,
                                                 bilet_rodzaj_ulgi,
                                                 bilet_okres_obowi¹zywania );

CREATE TABLE zajezdnia (
    adres VARCHAR2(255) NOT NULL,
    nazwa VARCHAR2(60) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE students2022 LOGGING
    STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
NO INMEMORY;

ALTER TABLE zajezdnia ADD CONSTRAINT zajezdnia_pk PRIMARY KEY ( adres );

ALTER TABLE autobus
    ADD CONSTRAINT autobus_model_autobusu_fk FOREIGN KEY ( model_autobusu_producent,
                                                           model_autobusu_model )
        REFERENCES model_autobusu ( producent,
                                    model )
    NOT DEFERRABLE;

ALTER TABLE autobus
    ADD CONSTRAINT autobus_zajezdnia_fk FOREIGN KEY ( zajezdnia_adres )
        REFERENCES zajezdnia ( adres )
    NOT DEFERRABLE;

ALTER TABLE biletomat
    ADD CONSTRAINT biletomat_autobus_fk FOREIGN KEY ( autobus_numer_rejestracyjny )
        REFERENCES autobus ( numer_rejestracyjny )
    NOT DEFERRABLE;

ALTER TABLE biletomat
    ADD CONSTRAINT biletomat_przystanek_fk FOREIGN KEY ( przystanek_id_przystanku )
        REFERENCES przystanek ( id_przystanku )
    NOT DEFERRABLE;

ALTER TABLE kolejnosc_przystankow
    ADD CONSTRAINT kolejnoœæ_linia_fk FOREIGN KEY ( linia_autobusowa_numer_linii )
        REFERENCES linia_autobusowa ( numer_linii )
    NOT DEFERRABLE;

ALTER TABLE kolejnosc_przystankow
    ADD CONSTRAINT kolejnoœæ_przystanek_fk FOREIGN KEY ( przystanek_id_przystanku )
        REFERENCES przystanek ( id_przystanku )
    NOT DEFERRABLE;

ALTER TABLE przegl¹d_pojazdu
    ADD CONSTRAINT przegl¹d_pojazdu_autobus_fk FOREIGN KEY ( autobus_numer_rejestracyjny )
        REFERENCES autobus ( numer_rejestracyjny )
    NOT DEFERRABLE;

ALTER TABLE przegl¹d_pojazdu
    ADD CONSTRAINT przegl¹d_pojazdu_pracownik_fk FOREIGN KEY ( pracownik_pesel )
        REFERENCES pracownik ( pesel )
    NOT DEFERRABLE;

ALTER TABLE przejazd
    ADD CONSTRAINT przejazd_autobus_fk FOREIGN KEY ( autobus_numer_rejestracyjny )
        REFERENCES autobus ( numer_rejestracyjny )
    NOT DEFERRABLE;

ALTER TABLE przejazd
    ADD CONSTRAINT przejazd_linia_autobusowa_fk FOREIGN KEY ( linia_autobusowa_numer_linii )
        REFERENCES linia_autobusowa ( numer_linii )
    NOT DEFERRABLE;

ALTER TABLE przejazd
    ADD CONSTRAINT przejazd_pracownik_fk FOREIGN KEY ( pracownik_pesel )
        REFERENCES pracownik ( pesel )
    NOT DEFERRABLE;

ALTER TABLE "RELACJA BILET-BILETOMAT"
    ADD CONSTRAINT relacja_bilet_fk FOREIGN KEY ( bilet_rodzaj_ulgi,
                                                  bilet_okres_obowi¹zywania )
        REFERENCES bilet_krótkookresowy ( rodzaj_ulgi,
                                          okres_obowi¹zywania )
    NOT DEFERRABLE;

ALTER TABLE "RELACJA BILET-BILETOMAT"
    ADD CONSTRAINT relacja_biletomat_fk FOREIGN KEY ( biletomat_numer_identyfikuj¹cy )
        REFERENCES biletomat ( numer_identyfikuj¹cy )
    NOT DEFERRABLE;



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            12
-- CREATE INDEX                             2
-- ALTER TABLE                             26
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        1
-- CREATE USER                              1
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 1

CREATE INDEX indeksPrzejazdu ON Przejazd(PRACOWNIK_PESEL);

CREATE SEQUENCE nowyBiletomat AS INT START WITH 100 INCREMENT BY 1;

--Procedura pozwala na dodanie do systemu nowego kierowcy z podstawowymi zarobkami
CREATE OR REPLACE PROCEDURE dodajNowyKierowca(vPesel IN PRACOWNIK.PESEL%TYPE,
            vImie IN PRACOWNIK.IMIÊ%TYPE,
            vNazwisko IN PRACOWNIK.NAZWISKO%TYPE,
            vWiek IN PRACOWNIK.WIEK%TYPE DEFAULT NULL) IS
    BEGIN
        INSERT INTO PRACOWNIK(PESEL, IMIÊ, NAZWISKO, ZAWÓD, WYNAGRODZENIE, WIEK) VALUES (vPesel, vImie, vNazwisko, 'Kierowca', 4760, vWiek);
END dodajNowyKierowca;

--Procedura ustawia date nastepnego przegladu, rok po dacie dodania przegladu do systemu
CREATE OR REPLACE PROCEDURE nastêpnyPrzeglad(vData IN PRZEGL¥D_POJAZDU.DATA_PRZEGL¥DU%TYPE,
            vOpis IN PRZEGL¥D_POJAZDU.OCENA_STANU_POJAZDU%TYPE,
            vPesel IN PRZEGL¥D_POJAZDU.PRACOWNIK_PESEL%TYPE,
            vNumerRejestracyjny IN PRZEGL¥D_POJAZDU.AUTOBUS_NUMER_REJESTRACYJNY%TYPE) IS
    BEGIN
        INSERT INTO PRZEGL¥D_POJAZDU(DATA_PRZEGL¥DU, OCENA_STANU_POJAZDU, DATA_NASTÊPNEGO_PRZEGL¥DU, PRACOWNIK_PESEL, AUTOBUS_NUMER_REJESTRACYJNY) VALUES (vData, vOpis, ADD_MONTHS(vData, 12), vPesel, vNumerRejestracyjny);
END nastêpnyPrzeglad;

--Funkcja liczy ile przejazdow dany pracownik przjechal konkretnym autobusem w podanym przedziale czasowym
CREATE OR REPLACE FUNCTION ilePrzejazdowDanymAutobusem(pesel IN PRACOWNIK.PESEL%TYPE, danyAutobus IN AUTOBUS.NUMER_REJESTRACYJNY%TYPE, przejazdOd IN PRZEJAZD.DATA_I_GODZINA_ROZPOCZÊCIA%TYPE, przejazdDo IN PRZEJAZD.DATA_I_GODZINA_ZAKOÑCZENIA%TYPE)
    RETURN NATURAL IS
    vIloscPrzejazdow NATURAL;
BEGIN
    SELECT COUNT(*) INTO vIloscPrzejazdow FROM PRZEJAZD WHERE PRACOWNIK_PESEL = pesel AND AUTOBUS_NUMER_REJESTRACYJNY = danyAutobus AND CAST(TRUNC(DATA_I_GODZINA_ROZPOCZÊCIA, 'MI')AS DATE) BETWEEN przejazdOd AND przejazdDo;
    RETURN vIloscPrzejazdow;
END ilePrzejazdowDanymAutobusem;

--Funkcja liczy ile przejazdow dany pracownik przjechal na konkretnej trasie w podanym przedziale czasowym
CREATE OR REPLACE FUNCTION ilePrzejazdowNaDanejTrasie(pesel IN PRACOWNIK.PESEL%TYPE, danaTrasa IN AUTOBUS.LINIA_AUTOBUSOWA_NUMER%TYPE, przejazdOd IN PRZEJAZD.DATA_I_GODZINA_ROZPOCZÊCIA%TYPE, przejazdDo IN PRZEJAZD.DATA_I_GODZINA_ZAKOÑCZENIA%TYPE)
    RETURN NATURAL IS
    vIloscPrzejazdow NATURAL;
BEGIN
    SELECT COUNT(*) INTO vIloscPrzejazdow FROM PRZEJAZD WHERE PRACOWNIK_PESEL = pesel AND LINIA_AUTOBUSOWA_NUMER = danaTrasa AND CAST(TRUNC(DATA_I_GODZINA_ROZPOCZÊCIA, 'MI')AS DATE) BETWEEN przejazdOd AND przejazdDo;
    RETURN vIloscPrzejazdow;
END ilePrzejazdowNaDanejTrasie;